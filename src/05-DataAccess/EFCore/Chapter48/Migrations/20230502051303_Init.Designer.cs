// <auto-generated />
using EFCoreFluentAPIOneToOne.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreFluentAPIOneToOne.Migrations
{
    [DbContext(typeof(CountryContext))]
    [Migration("20230502051303_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreFluentAPIOneToOne.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityInformationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityInformationId")
                        .IsUnique();

                    b.ToTable("City");
                });

            modelBuilder.Entity("EFCoreFluentAPIOneToOne.Models.CityInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MayorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CityInformation");
                });

            modelBuilder.Entity("EFCoreFluentAPIOneToOne.Models.City", b =>
                {
                    b.HasOne("EFCoreFluentAPIOneToOne.Models.CityInformation", "CityInformation")
                        .WithOne("City")
                        .HasForeignKey("EFCoreFluentAPIOneToOne.Models.City", "CityInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CityInformation");
                });

            modelBuilder.Entity("EFCoreFluentAPIOneToOne.Models.CityInformation", b =>
                {
                    b.Navigation("City")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
